//
// Generated file, do not edit! Created by nedtool 5.1 from src/Base/messages/TraversalAck.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __TRAVERSALACK_M_H
#define __TRAVERSALACK_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0501
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
    #include "TransmittedMessage_m.h" 
// }}

/**
 * Class generated from <tt>src/Base/messages/TraversalAck.msg:26</tt> by nedtool.
 * <pre>
 * packet TraversalAck extends TransmittedMessage_Base
 * {
 *     int burstifierId = -1; //Burstifier id
 *     int numSeq = -1; //Sequence number into packet burstifier
 *     int senderId = -1; //Burst sender identifier. Not used as a Id
 *     int distanceDifference;
 *     int lastEntryId;
 *     double queueTime;
 * 
 *     byteLength = 20;
 *     isControl = true;
 * }
 * </pre>
 */
class TraversalAck : public ::TransmittedMessage_Base
{
  protected:
    int burstifierId;
    int numSeq;
    int senderId;
    int distanceDifference;
    int lastEntryId;
    double queueTime;

  private:
    void copy(const TraversalAck& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const TraversalAck&);

  public:
    TraversalAck(const char *name=nullptr, short kind=0);
    TraversalAck(const TraversalAck& other);
    virtual ~TraversalAck();
    TraversalAck& operator=(const TraversalAck& other);
    virtual TraversalAck *dup() const override {return new TraversalAck(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getBurstifierId() const;
    virtual void setBurstifierId(int burstifierId);
    virtual int getNumSeq() const;
    virtual void setNumSeq(int numSeq);
    virtual int getSenderId() const;
    virtual void setSenderId(int senderId);
    virtual int getDistanceDifference() const;
    virtual void setDistanceDifference(int distanceDifference);
    virtual int getLastEntryId() const;
    virtual void setLastEntryId(int lastEntryId);
    virtual double getQueueTime() const;
    virtual void setQueueTime(double queueTime);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const TraversalAck& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, TraversalAck& obj) {obj.parsimUnpack(b);}


#endif // ifndef __TRAVERSALACK_M_H

