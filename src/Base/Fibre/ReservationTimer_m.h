//
// Generated file, do not edit! Created by nedtool 5.1 from src/Base/Fibre/ReservationTimer.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __RESERVATIONTIMER_M_H
#define __RESERVATIONTIMER_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0501
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
 
    #include "TransmittedMessage_m.h"
     
// }}

/**
 * Class generated from <tt>src/Base/Fibre/ReservationTimer.msg:25</tt> by nedtool.
 * <pre>
 * packet ReservationTimer extends TransmittedMessage_Base
 * {
 *     int numseq;
 *     int burstifierId;
 *     double spectrumCenter;
 *     double spectrumLowerBound;
 *     double spectrumUpperBound;
 *     double msgSize;//in byte
 *     simtime_t msgOffset;
 *     simtime_t msgDuration;
 *     simtime_t timerStart;
 *     simtime_t timerEnd;
 *     int channelIndex;
 *     int senderId;
 * 
 *     byteLength = 150;
 *     isControl = true;
 * }
 * </pre>
 */
class ReservationTimer : public ::TransmittedMessage_Base
{
  protected:
    int numseq;
    int burstifierId;
    double spectrumCenter;
    double spectrumLowerBound;
    double spectrumUpperBound;
    double msgSize;
    ::omnetpp::simtime_t msgOffset;
    ::omnetpp::simtime_t msgDuration;
    ::omnetpp::simtime_t timerStart;
    ::omnetpp::simtime_t timerEnd;
    int channelIndex;
    int senderId;

  private:
    void copy(const ReservationTimer& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ReservationTimer&);

  public:
    ReservationTimer(const char *name=nullptr, short kind=0);
    ReservationTimer(const ReservationTimer& other);
    virtual ~ReservationTimer();
    ReservationTimer& operator=(const ReservationTimer& other);
    virtual ReservationTimer *dup() const override {return new ReservationTimer(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getNumseq() const;
    virtual void setNumseq(int numseq);
    virtual int getBurstifierId() const;
    virtual void setBurstifierId(int burstifierId);
    virtual double getSpectrumCenter() const;
    virtual void setSpectrumCenter(double spectrumCenter);
    virtual double getSpectrumLowerBound() const;
    virtual void setSpectrumLowerBound(double spectrumLowerBound);
    virtual double getSpectrumUpperBound() const;
    virtual void setSpectrumUpperBound(double spectrumUpperBound);
    virtual double getMsgSize() const;
    virtual void setMsgSize(double msgSize);
    virtual ::omnetpp::simtime_t getMsgOffset() const;
    virtual void setMsgOffset(::omnetpp::simtime_t msgOffset);
    virtual ::omnetpp::simtime_t getMsgDuration() const;
    virtual void setMsgDuration(::omnetpp::simtime_t msgDuration);
    virtual ::omnetpp::simtime_t getTimerStart() const;
    virtual void setTimerStart(::omnetpp::simtime_t timerStart);
    virtual ::omnetpp::simtime_t getTimerEnd() const;
    virtual void setTimerEnd(::omnetpp::simtime_t timerEnd);
    virtual int getChannelIndex() const;
    virtual void setChannelIndex(int channelIndex);
    virtual int getSenderId() const;
    virtual void setSenderId(int senderId);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ReservationTimer& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ReservationTimer& obj) {obj.parsimUnpack(b);}


#endif // ifndef __RESERVATIONTIMER_M_H

